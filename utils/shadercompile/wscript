#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'shadercompile_dll'

def options(opt):
	# stub
	return

def configure(conf):
	# stub
	return

def build(bld):
	source = [
    	'../common/cmdlib.cpp',
		'cmdsink.cpp',
		'd3dxfxc.cpp',
		'../../public/filesystem_helpers.cpp',
		'../common/pacifier.cpp',
		'shadercompile.cpp',
		'subprocess.cpp',
		'cfgprocessor.cpp',
		'../common/threads.cpp',
		'../common/vmpi_tools_shared.cpp',
		'../common/tools_minidump.cpp',
		'../../public/tier0/memoverride.cpp'
	]

	includes = [
		'.',
		'../common',
		'../vmpi',
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../../common',
	]

	defines = [
		'SHADERCOMPILE_EXPORTS',
		'MPI'
    ]

	libs = [
		'mathlib',
		'tier1',
		'tier2',
		'vmpi',
		'vstdlib',
		'lzma'
    ]

	if bld.env.DEST_OS == 'win32':
		libs += ['USER32', 'WS2_32', 'GDI32', 'D3D9', 'D3D11', 'DXGI']

	install_path = bld.env.LIBDIR

	bld.shlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

